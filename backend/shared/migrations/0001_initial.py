# Generated by Django 5.0.2 on 2025-07-05 13:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('demande_service', '0002_demande_cv_binome_demande_demande_stage_binome_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KPIQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='question')),
                ('category', models.CharField(choices=[('technical', 'Technique'), ('soft_skills', 'Soft Skills'), ('communication', 'Communication'), ('teamwork', "Travail d'équipe"), ('leadership', 'Leadership'), ('adaptability', 'Adaptabilité'), ('other', 'Autre')], default='other', max_length=20, verbose_name='catégorie')),
                ('order', models.IntegerField(default=0, verbose_name='ordre')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
            ],
            options={
                'verbose_name': 'question KPI',
                'verbose_name_plural': 'questions KPI',
                'db_table': 'kpi_question',
                'ordering': ['category', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PFEDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('authors', models.CharField(max_length=200, verbose_name='auteurs')),
                ('year', models.IntegerField(verbose_name='année')),
                ('speciality', models.CharField(max_length=200, verbose_name='spécialité')),
                ('supervisor', models.CharField(blank=True, max_length=200, verbose_name='encadrant')),
                ('pdf_file', models.FileField(upload_to='pfe_documents/', verbose_name='fichier PDF')),
                ('presentation_file', models.FileField(blank=True, upload_to='pfe_presentations/', verbose_name='fichier présentation')),
                ('keywords', models.TextField(blank=True, verbose_name='mots-clés')),
                ('abstract', models.TextField(blank=True, verbose_name='résumé')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('archived', 'Archivé')], default='draft', max_length=20, verbose_name='statut')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='date de publication')),
                ('download_count', models.IntegerField(default=0, verbose_name='nombre de téléchargements')),
                ('view_count', models.IntegerField(default=0, verbose_name='nombre de vues')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_pfe_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'document PFE',
                'verbose_name_plural': 'documents PFE',
                'db_table': 'pfe_document',
                'ordering': ['-year', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('company', models.CharField(max_length=200, verbose_name='entreprise')),
                ('location', models.CharField(max_length=200, verbose_name='localisation')),
                ('start_date', models.DateField(verbose_name='date de début')),
                ('end_date', models.DateField(verbose_name='date de fin')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('completed', 'Terminé'), ('suspended', 'Suspendu'), ('cancelled', 'Annulé')], default='active', max_length=20, verbose_name='statut')),
                ('progress', models.IntegerField(default=0, verbose_name='progression')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('demande', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stage', to='demande_service.demande')),
                ('stagiaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages_stagiaire', to=settings.AUTH_USER_MODEL)),
                ('tuteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stages_tuteur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'stage',
                'verbose_name_plural': 'stages',
                'db_table': 'stage',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('document_type', models.CharField(choices=[('rapport', 'Rapport'), ('fiche_suivi', 'Fiche de suivi'), ('pfe', 'PFE'), ('presentation', 'Présentation'), ('other', 'Autre')], default='other', max_length=20, verbose_name='type de document')),
                ('file', models.FileField(upload_to='documents/', verbose_name='fichier')),
                ('file_size', models.IntegerField(blank=True, null=True, verbose_name='taille du fichier')),
                ('is_approved', models.BooleanField(default=False, verbose_name='approuvé')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name="date d'approbation")),
                ('feedback', models.TextField(blank=True, verbose_name='feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_documents', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='shared.stage')),
            ],
            options={
                'verbose_name': 'document',
                'verbose_name_plural': 'documents',
                'db_table': 'document',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('order', models.IntegerField(verbose_name='ordre')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('validated', 'Validé'), ('rejected', 'Rejeté')], default='pending', max_length=20, verbose_name='statut')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='date limite')),
                ('completed_date', models.DateField(blank=True, null=True, verbose_name='date de completion')),
                ('validated_date', models.DateField(blank=True, null=True, verbose_name='date de validation')),
                ('tuteur_feedback', models.TextField(blank=True, verbose_name='feedback tuteur')),
                ('stagiaire_comment', models.TextField(blank=True, verbose_name='commentaire stagiaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='shared.stage')),
            ],
            options={
                'verbose_name': 'étape',
                'verbose_name_plural': 'étapes',
                'db_table': 'step',
                'ordering': ['order'],
                'unique_together': {('stage', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('message', models.TextField(verbose_name='message')),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Succès'), ('warning', 'Avertissement'), ('error', 'Erreur')], default='info', max_length=10, verbose_name='type de notification')),
                ('is_read', models.BooleanField(default=False, verbose_name='lu')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='date de lecture')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='shared.document')),
                ('related_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='shared.stage')),
                ('related_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='shared.step')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'db_table': 'notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='step',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='shared.step'),
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='titre')),
                ('content', models.TextField(verbose_name='contenu')),
                ('testimonial_type', models.CharField(choices=[('text', 'Texte'), ('video', 'Vidéo')], default='text', max_length=10, verbose_name='type de témoignage')),
                ('video_url', models.URLField(blank=True, verbose_name='URL vidéo')),
                ('video_file', models.FileField(blank=True, upload_to='testimonials/videos/', verbose_name='fichier vidéo')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('rejected', 'Rejeté')], default='pending', max_length=20, verbose_name='statut')),
                ('moderated_at', models.DateTimeField(blank=True, null=True, verbose_name='date de modération')),
                ('moderation_comment', models.TextField(blank=True, verbose_name='commentaire de modération')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to=settings.AUTH_USER_MODEL)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_testimonials', to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to='shared.stage')),
            ],
            options={
                'verbose_name': 'témoignage',
                'verbose_name_plural': 'témoignages',
                'db_table': 'testimonial',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_type', models.CharField(choices=[('stagiaire_self', 'Auto-évaluation Stagiaire'), ('tuteur_stagiaire', 'Évaluation Tuteur → Stagiaire'), ('stagiaire_tuteur', 'Évaluation Stagiaire → Tuteur'), ('rh_global', 'Évaluation RH Globale')], max_length=20, verbose_name="type d'évaluation")),
                ('scores', models.JSONField(default=dict, verbose_name='scores')),
                ('comments', models.TextField(blank=True, verbose_name='commentaires')),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='score global')),
                ('is_completed', models.BooleanField(default=False, verbose_name='terminée')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='date de completion')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('evaluated', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_received', to=settings.AUTH_USER_MODEL)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_given', to=settings.AUTH_USER_MODEL)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='shared.stage')),
            ],
            options={
                'verbose_name': 'évaluation',
                'verbose_name_plural': 'évaluations',
                'db_table': 'evaluation',
                'ordering': ['-created_at'],
                'unique_together': {('stage', 'evaluator', 'evaluated', 'evaluation_type')},
            },
        ),
    ]
