#!/usr/bin/env python
"""
Script pour cr√©er des rapports PFE de test
"""

import os
import sys
import django

# Setup Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gateway.stagebloom.settings')
django.setup()

from auth_service.models import User
from shared.models import Stage, PFEReport
from datetime import date, timedelta

def create_pfe_reports():
    print("Cr√©ation des rapports PFE de test...")
    
    # Trouver un stage actif
    stage_actif = Stage.objects.filter(status='active').first()
    if not stage_actif:
        print("‚ùå Aucun stage actif trouv√©")
        return
    
    stagiaire = stage_actif.stagiaire
    print(f"‚úÖ Stage trouv√©: {stage_actif.title}")
    print(f"   Stagiaire: {stagiaire.get_full_name()}")
    
    # Cr√©er un rapport PFE de test
    pfe_report, created = PFEReport.objects.get_or_create(
        stage=stage_actif,
        defaults={
            'stagiaire': stagiaire,
            'tuteur': stage_actif.tuteur,
            'title': 'Rapport PFE - D√©veloppement d\'une application web moderne',
            'abstract': 'Ce projet pr√©sente le d√©veloppement d\'une application web moderne utilisant les technologies React et Django. L\'objectif est de cr√©er une plateforme de gestion de stages avec des fonctionnalit√©s avanc√©es.',
            'keywords': 'React, Django, Python, JavaScript, Web Development, Full-Stack',
            'speciality': 'Informatique - D√©veloppement Web',
            'year': 2025,
            'status': 'draft',
            'version': 1,
            'is_final': False
        }
    )
    
    if created:
        print(f"‚úÖ Rapport PFE cr√©√©: {pfe_report.title}")
        print(f"   Statut: {pfe_report.status}")
        print(f"   Ann√©e: {pfe_report.year}")
    else:
        print(f"‚úÖ Rapport PFE existant: {pfe_report.title}")
    
    # Cr√©er un deuxi√®me rapport PFE pour un autre stage
    stage_actif2 = Stage.objects.filter(status='active').exclude(id=stage_actif.id).first()
    if stage_actif2:
        pfe_report2, created2 = PFEReport.objects.get_or_create(
            stage=stage_actif2,
            defaults={
                'stagiaire': stage_actif2.stagiaire,
                'tuteur': stage_actif2.tuteur,
                'title': 'Rapport PFE - Intelligence Artificielle et Machine Learning',
                'abstract': 'Ce projet explore l\'application de l\'intelligence artificielle et du machine learning dans le domaine de l\'analyse de donn√©es. L\'objectif est de d√©velopper des mod√®les pr√©dictifs pour l\'optimisation des processus.',
                'keywords': 'Machine Learning, Python, TensorFlow, Data Science, AI',
                'speciality': 'Informatique - Intelligence Artificielle',
                'year': 2025,
                'status': 'submitted',
                'version': 1,
                'is_final': False
            }
        )
        
        if created2:
            print(f"‚úÖ Deuxi√®me rapport PFE cr√©√©: {pfe_report2.title}")
            print(f"   Statut: {pfe_report2.status}")
        else:
            print(f"‚úÖ Deuxi√®me rapport PFE existant: {pfe_report2.title}")
    
    # Afficher le r√©sum√©
    total_reports = PFEReport.objects.count()
    print(f"\nüìä R√©sum√©:")
    print(f"   Total des rapports PFE: {total_reports}")
    
    for report in PFEReport.objects.all():
        print(f"   - {report.title} ({report.stagiaire.get_full_name()}) - {report.status}")

if __name__ == "__main__":
    create_pfe_reports() 