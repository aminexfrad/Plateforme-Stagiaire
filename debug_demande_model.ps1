# Diagnostic du mod√®le Demande et de la base de donn√©es
Write-Host "üîç Diagnostic du mod√®le Demande et de la base de donn√©es" -ForegroundColor Cyan
Write-Host "=" * 60 -ForegroundColor Cyan

# Aller dans le dossier backend
Set-Location backend

# V√©rifier que Python est disponible
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python d√©tect√©: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python n'est pas install√© ou n'est pas dans le PATH" -ForegroundColor Red
    exit 1
}

# V√©rifier que Django est install√©
try {
    python -c "import django; print('Django version:', django.get_version())" 2>&1
    Write-Host "‚úÖ Django est install√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Django n'est pas install√©" -ForegroundColor Red
    Write-Host "Installez les d√©pendances avec: pip install -r requirements.txt" -ForegroundColor Yellow
    exit 1
}

# Lancer le diagnostic
Write-Host "`nüöÄ Lancement du diagnostic du mod√®le Demande..." -ForegroundColor Yellow
python debug_demande_model.py

# V√©rifier le code de sortie
if ($LASTEXITCODE -eq 0) {
    Write-Host "`n‚úÖ Diagnostic termin√© avec succ√®s!" -ForegroundColor Green
} else {
    Write-Host "`n‚ùå Diagnostic √©chou√© avec le code: $LASTEXITCODE" -ForegroundColor Red
}

# Retourner au dossier racine
Set-Location ..

Write-Host "`nüìã Ce diagnostic va:" -ForegroundColor Cyan
Write-Host "- V√©rifier les champs du mod√®le Django Demande" -ForegroundColor White
Write-Host "- Comparer avec la structure de la base de donn√©es" -ForegroundColor White
Write-Host "- Identifier le probl√®me avec le champ 'date_soumission'" -ForegroundColor White
Write-Host "- Proposer des solutions de correction" -ForegroundColor White

Write-Host "`nüîß Probl√®me identifi√©:" -ForegroundColor Yellow
Write-Host "L'erreur 'Field date_soumission doesn't have a default value' indique" -ForegroundColor White
Write-Host "une incoh√©rence entre le mod√®le Django et la base de donn√©es" -ForegroundColor White
